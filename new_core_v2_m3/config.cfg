/*
 * Copyright (c) 2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== empty.cfg ========
 */


/* ================ General configuration ============== */
var Program = xdc.useModule('xdc.cfg.Program'); 
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Log = xdc.useModule('xdc.runtime.Log');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');

/* ================ System configuration ================ */
var SysMin = xdc.useModule('xdc.runtime.SysMin');
//var EMAC = xdc.useModule('ti.drivers.EMAC');
//var Global = xdc.useModule('ti.ndk.config.Global');
//var Ip = xdc.useModule('ti.ndk.config.Ip');
//var Tcp = xdc.useModule('ti.ndk.config.Tcp');
var HeapTrack = xdc.useModule('ti.sysbios.heaps.HeapTrack');
var Idle = xdc.useModule('ti.sysbios.knl.Idle');
System.SupportProxy = SysMin;
System.extendedFormats = '%$L%$S%$F%f';

/* ================ Logging configuration ================ */
//var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');

/* ================ Driver configuration ================ -*/
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');
TIRTOS.useEMAC = true;
TIRTOS.useGPIO = true;
TIRTOS.useSPI = true;
TIRTOS.useI2C = true;
//var I2C = xdc.useModule('ti.drivers.I2C');
//var SPI = xdc.useModule('ti.drivers.SPI');
//var GPIO = xdc.useModule('ti.drivers.GPIO');
Clock.tickPeriod = 100;

/* ================ NDK configuration ================ */
var Ndk       = xdc.loadPackage('ti.ndk.config');
var Global    = xdc.useModule('ti.ndk.config.Global');
var Ip        = xdc.useModule('ti.ndk.config.Ip');
var Udp       = xdc.useModule('ti.ndk.config.Udp');
var Tcp       = xdc.useModule('ti.ndk.config.Tcp');

Global.IPv6 = false;
Global.stackLibType = Global.MIN;
Global.networkOpenHook = "&netOpenHook";

/* automatically call fdOpen/CloseSession for our sockets Task */
Global.autoOpenCloseFD = true;
Ip.autoIp = false; 
Ip.address = "192.168.1.233";	// NETZSEITE
//Ip.address = "192.168.200.150";	// Goetze
//Ip.address = "192.168.1.232";	// MASCHINENSEITE
Ip.mask = "255.255.255.0";

Global.pktNumFrameBufs = 6;
Global.memRawPageCount = 6;
Global.ndkThreadStackSize = 1536;
Global.lowTaskStackSize   = 1024;
Global.normTaskStackSize  = 1024;
Global.highTaskStackSize  = 1024;
Tcp.transmitBufSize = 1024;
Tcp.receiveBufSize  = 1024;

Memory.defaultHeapSize = 10240;
BIOS.heapTrackEnabled = true;
var semaphore0Params = new Semaphore.Params();
semaphore0Params.instance.name = "semaphore_send";
semaphore0Params.mode = Semaphore.Mode_BINARY;
Program.global.semaphore_send = Semaphore.create(0, semaphore0Params);
Idle.idleFxns[0] = "&idle_send";
var hwi0Params = new Hwi.Params();
hwi0Params.instance.name = "hwi_ipc";
Program.global.hwi_ipc = Hwi.create(98, "&isr_ipc", hwi0Params);

